name: Node CI

on:
  push:
    paths:
      - '**.*'
      - '!**.md' # Exclude Markdown
jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x, 10.x]
    env:
      CI: true
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Use Cache # for optimize Install Dependencies
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
    - name: Install Dependencies
      run: npm ci # Do not use "npm install" to update package-lock.json.
    - name: Build with Nuxt
      run: npm run build
    - name: Test with Jest
      run: npm test -- --ci
    - name: Archive Production Artifact
      if: contains(github.ref, 'tags/v') && matrix.node-version == 10.x # works only version tagged
      uses: actions/upload-artifact@v1.0.0
      with:
        name: dist
        path: dist

  deploy:
    name: Deploy
    needs: [build]
    if: contains(github.ref, 'tags/v') # works only version tagged
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Production Artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: dist
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: Install Firebase CLI
      run: npm i -g firebase-tools
    - name: Deploy to Firebase
      run: firebase deploy --token=${{ secrets.FIREBASE_TOKEN }}
